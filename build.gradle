buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id 'io.spring.dependency-management' version '0.5.4.RELEASE'
    id "com.jfrog.bintray" version '1.2'
    id 'com.jfrog.artifactory' version '4.0.0'
}

version '2.0-SNAPSHOT'
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-gsp'
// Used for publishing to central repository, remove if not needed
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.grails.org/grails/core' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided 'org.springframework.boot:spring-boot-starter-actuator'
    provided 'org.springframework.boot:spring-boot-autoconfigure'
    provided 'org.springframework.boot:spring-boot-starter-tomcat'

    provided 'org.grails:grails-web-boot'
    provided 'org.grails:grails-dependencies'
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile 'org.grails:grails-plugin-testing'

    console 'org.grails:grails-console'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

if (System.getenv('ARTIFACTORY_CONTEXT_URL')) {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom.withXml {
                    def pomNode = asNode()
                    pomNode.dependencyManagement.replaceNode {}

                    // simply remove dependencies without a version
                    // version-less dependencies are handled with dependencyManagement
                    // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                    pomNode.dependencies.dependency.findAll {
                        it.version.text().isEmpty()
                    }.each {
                        it.replaceNode {}
                    }
                }
                from components.java
                def descriptor =
                        artifacts = ["build/libs/cookie-${version}.jar", sourcesJar]

            }
        }
    }
    artifactory {
        contextUrl = System.getenv('ARTIFACTORY_CONTEXT_URL')

        publish {
            defaults {
                publications('mavenJava')
                publishArtifacts = true
                publishPom = true

            }
            repository {
                repoKey = "${version.contains('SNAPSHOT') ? 'plugins-snapshot-local' : 'plugins-snapshot-local'}"
                username = System.getenv('ARTIFACTORY_USERNAME') ?: 'admin'
                password = System.getenv('ARTIFACTORY_USERNAME') ?: 'password'
            }
        }
    }
}